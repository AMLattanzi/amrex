
CPP = cpp

ifeq ($(COMP),CFRONT)
CXX := OCC
#
# Add -DBL_USE_SETBUF if don't have pubsetbuf() in I/O Streams Library.
#
override XTRADEFS += -DBL_USE_SETBUF 
override XTRADEFS += -DBL_SETBUF_SIGNED_CHAR -DBL_COALESCE_FABS
OUTPUT_OPTION	   =  ; mv $*.o $@
endif

ifeq ($(COMP),CC)
CXX     := CC -h instantiate=local
CXXOPTF += -O2 -h new_for_init
CXXDEBF += -g -h new_for_init
#
# Add -DBL_USE_SETBUF if don't have pubsetbuf() in I/O Streams Library.
#
override XTRADEFS += -DBL_USE_SETBUF -DBL_SETBUF_SIGNED_CHAR
override XTRADEFS += -DBL_COALESCE_FABS
endif

ifeq ($(COMP),KCC)
CXX     := KCC
CXXOPTF += +K2
CXXDEBF += +K0
#
# Add -DBL_USE_SETBUF if don't have pubsetbuf() in I/O Streams Library.
#
override XTRADEFS += -DBL_SETBUF_SIGNED_CHAR -DBL_COALESCE_FABS
endif

ifeq ($(PROFILE), TRUE)
#
# The following are for apprentice
# apprentice is broken on the T3E -- vince
#
#CXXPRFF	 += -happrentice
#XTRALIBS += -lapp
#FPRFF += -eA
#
# the following is for pat
#
ifeq ($(COMP),CC)
XTRALIBS += -lpat pat.cld
endif
ifeq ($(COMP),KCC)
XTRALIBS += --backend -lpat --backend pat.cld
endif
endif

FC     = f90 -N 80 -e I
FOPTF += -O,aggress,pipeline2,vector3,split0 -apad
FDEBF += -g

COPTF += -O2
CDEBF += -g
CPRFF +=

BSP_DEVICE = DRMA_SHMEM
BSP_MACHINE = CRAYT3E

OUTPUT_OPTION	= ; mv $*.o $(objTempDir)/$*.o

FORTPREP	= perl $(PBOXLIB_HOME)/scripts/strip72 -c
FORT_OUTPUT_OPTION	= ; mv $*.o $(objTempDir)/$*.o
FORTLINK	= UPPERCASE
